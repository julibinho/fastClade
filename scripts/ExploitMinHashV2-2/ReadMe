###############################################
#### BashDoAllv2.sh 
The script will automatise all the process of comparing protein with the MinHashV2-2.

/!\ The only thing that change, is that you need another Query folder of non formated fasta that is named like the formated query folder followed by "Raw" 



What does it need : 
	#Other programs in the same folder, without any name change :
	- the createDatabase Program 
	- the testDatabase Program 
	- the ResultRead.py Program 
	- the ResultReadOutputFormated.py Program 

	#A clean input :
	- A well formated fasta SeedFolder (that contain all the seed fasta)    Exemple : allSeedFormated
	- A well formated fasta TestFolder (that contain all the query fasta)   Exemple : allseqFormated

	#A another folder at this location
	- /!\ A not formated TestFolder that is the same name of your well formated fasta TestFolder, followed by "Raw"  Exemple : allseqFormatedRaw
	
Utilisation : You can use it by writing :
./BashDoAll.sh -S allSeedFormated -Q allseqFormated -T X -N Y
Where X is the length of the shingles
Where Y is the number of hash functions

Output :
A folder with the name of the arguments will be created in the current location containing :
	- comparaison : the Raw output of the MinHash under the format : <QuerySequence> <SeedSequence> <MinDistanceIntraFamily> <MinDistanceExtraFamily>
	- SeedDataBase : external Hash file of the seed Database (contain some parametter to hash the QueryDatabase)
	- TrueResults : Output file that contain all couple of protein where the minHash program was right. format : <QueryProtName> <QueryFamily> <SeedProtName> <SeedFamily>
	- FalseResults : Same thing that the TrueResults file, but with the proteins that minHash guessed wrong
	- LogComparaison : Result file formated like :
		- 1st line : total Processing time
		- 2nd line : Ratio of True positive
		- 3rd line : Ratio of False Positive
		- 4th line : Ratio of false negative 
		- 5th line : F-Score (often irrelevent)

Even if the output in LogComparaison is a bit not userFriendly, you still can redirect the output of this program that is a bit more userfriendly

#### ResultRead.py && ResultReadOutputFormated.py 
Those are the same program, the only thing that change, is the output.

It it used to process and iterprete the RawResult file that the MinHash create

Input :
	- The well formated fasta SeedFolder
	- The well formated fasta TestFolder
	- The testDatabase Result file (that is the same as the Raw MinHash result file)
	- a empty file where write
	- another empty file where write

Output :
	- TrueResults (check BashDoAll)
	- FalseResults (check BashDoAll)
	- graphical ouput on the console 


#### DistributionPlot.py
It will draw the distribution of all the best intraFamily and ExtraFamily similarities in an histogram with a MinHash result file
Input :
	- ResultFile : the MinHash result file
	- Output : the Name of the histogram file
	- Number of Bins : Integer that is used to scale the histogram (usualy 30/35 is good)

Exemple of use :
	python DistributionPlot.py MinHashResult Graph 30

Output : 
in this case, an histogram named Graph.
	















